{%- assign section_name = 'product-recommendations' -%}
{% assign section_id = section_name | append: '--' | append: section.id %}

{% assign limit = 6 %}
{% assign colour_theme = section.settings.colour_theme | default: 'light' %}
{% assign glider_id = section_id | append: '--glider' %}
{% assign heading = section.settings.heading | default: '' %}
{% assign heading_highlight = section.settings.heading_highlight | default: false %}
{% assign is_glider = false %}

{% if recommendations.products_count > 3 %}
  {% assign is_glider = true %}
{% endif %}

<div class="{{ section_name }}" id="{{ section_id }}" data-colour-theme-{{ colour_theme }} data-section-padding>

  <div class="{{ section_name }}__intro intro" data-text-alignment-left>
    {% render 'bs-container', state: 'open' %}
      {%
        render 'heading-highlight',
        classes: 'product-recommendations__heading intro__heading heading--2',
        heading: heading,
        style: heading_highlight,
        tag: 'h2'
      %}
    {% render 'bs-container', state: 'closed' %}
  </div>

  <div class="{{ section_name }}__main main{% if is_glider %} with-glider{% endif %}" id="{{ section_name }}__main"></div>

</div>

<script>

  let sectionName = {{ section_name | json }};
  let html, is_glider;
  let productID = {{ product.id | json }};
  let limit = {{ limit | json }};
  let container = document.getElementById(`${sectionName}__main`) || false;

  document.addEventListener('DOMContentLoaded', function() {
    recommendedProducts();
  },false);

  // alternatively, if you don't want to use a polyfil
  function imgURLFilter(src, size) {
    // remove any current image size then add the new image size
    return src
      .replace(/_(pico|icon|thumb|small|compact|medium|large|grande|original|1024x1024|2048x2048|master)+\./g, '.')
      .replace(/\.jpg|\.png|\.gif|\.jpeg/g, function(match) {
        return '_'+size+match;
      })
    ;
  }

  function recommendedProducts() {
    fetch(window.Shopify.routes.root + `recommendations/products.json?product_id=${productID}&limit=${limit}`)
      .then(response => response.json())
      .then(({ products }) => {
        if (products.length > 0) {
          container.innerHTML = renderGliderMarkup(products);
        }
      }
    );
  }

  function renderGliderMarkup( products = [] ) {
    return `
      <div class="glide js--glider" id="glide--recommended-products" data-glide-style="recommended-products">
        <div class="glide__track" data-glide-el="track">
          <ul class="glide__slides">
            ${products.map(product =>
              `<li class="glide__slide">
                <div class="${sectionName}__item">
                  ${renderProductMarkup(product)}
                </div>
              </li>`
            ).join('')}
          </ul>
        </div>
      </div>`;
  }

  function renderProductMarkup( product = {} ) {
    console.log( product );
    return `
      <article class="card-product card-product--${sectionName} product">
        <div class="card-product__featured-image product__featured-image">
          <a class="card-product__featured-image-link lazyloaded" href="/products/${product.handle}" title="${product.title}" target="_self">
            <img class="lazyload-item lazyload-item--image lazypreload lazyload-item--inline inline lazyautosizes lazyload" src="${imgURLFilter(product.featured_image, 'icon')}" data-src="${imgURLFilter(product.featured_image, 'large')}" alt="${product.title}" />
          </a>
        </div>
        <div class="card-product__info">
          <strong class="card-product__title caption--2">${product.title}</strong>
          <span class="card-product__price caption--2">${product.price}</span>
        </div>
      </article>`;
  }

</script>

{% schema %}
  {
    "name": "Product recommendations",
    "class": "section section--product-recommendations",
    "settings": [
      {
        "content": "Content",
        "type": "header"
      },
      {
        "label": "Heading",
        "type": "richtext",
        "id": "heading"
      },
      {
        "label": "Heading Highlight",
        "type": "select",
        "options": [
          { "value": "standard", "label": "Standard" },
          { "value": "stroke", "label": "Stroke" },
          { "value": "circle", "label": "Circle" }
        ],
        "default": "standard",
        "id": "heading_highlight"
      },
      {
        "content": "Settings",
        "type": "header"
      },
      {
        "label": "Colour Theme",
        "type": "select",
        "options": [
          { "value": "light", "label": "Light" },
          { "value": "grey", "label": "Grey" },
          { "value": "dark", "label": "Dark" }
        ],
        "default": "light",
        "id": "colour_theme"
      }
    ],
    "presets": [
      {
        "name": "Product recommendations"
      }
    ],
    "templates": [ "product" ]
  }
{% endschema %}
